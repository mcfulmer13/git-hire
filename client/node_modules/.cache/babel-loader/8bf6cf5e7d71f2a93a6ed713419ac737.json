{"ast":null,"code":"import _slicedToArray from\"/Users/mckinleyfulmer/Desktop/git-hire/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{ADD_JOB,REMOVE_JOB}from'../../utils/actions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function JobList(){var dispatch=useDispatch();var state=useSelector(function(state){return state;});var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newJobTitle=_useState2[0],setNewJobTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newJobCompany=_useState4[0],setNewJobCompany=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newJobSalary=_useState6[0],setNewJobSalary=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),newJobDate=_useState8[0],setNewJobDate=_useState8[1];return/*#__PURE__*/_jsx(\"div\",{className:\"UserJobs\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container-fluid\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-between\",children:/*#__PURE__*/_jsxs(\"div\",{align:\"center\",style:{background:\"blue\"},children:[/*#__PURE__*/_jsx(\"section\",{className:\"\",children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[\"Add a job:\",/*#__PURE__*/_jsx(\"input\",{defaultValue:newJobTitle,onChange:function onChange(event){return setNewJobTitle(event.target.value);},placeholder:\"New job title...\",type:\"text\"}),/*#__PURE__*/_jsx(\"input\",{defaultValue:newJobCompany,onChange:function onChange(event){return setNewJobCompany(event.target.value);},placeholder:\"Job's company name...\",type:\"text\"}),/*#__PURE__*/_jsx(\"input\",{defaultValue:newJobSalary,onChange:function onChange(event){return setNewJobSalary(event.target.value);},placeholder:\"Job's Salary...\",type:\"text\"}),/*#__PURE__*/_jsx(\"input\",{defaultValue:newJobDate,onChange:function onChange(event){return setNewJobDate(event.target.value);},placeholder:\"Posted on...\",type:\"text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return dispatch({type:ADD_JOB,payload:{title:newJobTitle,company:newJobCompany,salary:newJobSalary,postedOn:newJobDate}});},children:\"Add Car\"})]})})}),/*#__PURE__*/_jsxs(\"section\",{className:\"car-list\",children:[console.log(state),state.cars.map(function(job){return/*#__PURE__*/_jsxs(\"div\",{id:job.id,className:\"\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"card-header bg-primary text-light p-2 m-0\",children:[job.title,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'1rem'},children:job.company})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body bg-light p-2\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"$\",job.salary,\"/y\"]}),/*#__PURE__*/_jsxs(\"code\",{children:[\"Job ID:\",job.id]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body bg-light p-2\",children:[/*#__PURE__*/_jsx(\"p\",{children:job.postedOn}),/*#__PURE__*/_jsxs(\"code\",{children:[\"Job ID:\",job.id]})]})]},job.id);})]})]})})})});}export default JobList;","map":{"version":3,"sources":["/Users/mckinleyfulmer/Desktop/git-hire/client/src/Components/UserProfile/JobList.js"],"names":["React","useState","useDispatch","useSelector","ADD_JOB","REMOVE_JOB","JobList","dispatch","state","newJobTitle","setNewJobTitle","newJobCompany","setNewJobCompany","newJobSalary","setNewJobSalary","newJobDate","setNewJobDate","background","event","target","value","type","payload","title","company","salary","postedOn","console","log","cars","map","job","id","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_JOB, REMOVE_JOB } from '../../utils/actions';\n\nfunction JobList() {\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n\n    const [newJobTitle, setNewJobTitle] = useState('');\n    const [newJobCompany, setNewJobCompany] = useState('');\n    const [newJobSalary, setNewJobSalary] = useState('');\n    const [newJobDate, setNewJobDate] = useState('');\n\n    return (\n        <div className=\"UserJobs\">\n            <div className=\"container-fluid\">\n                <div className=\"row justify-content-between\">\n                    <div align=\"center\" style={{ background: \"blue\" }}>\n                        <section className=\"\">\n                            <div>\n                                <div className=\"\">\n                                    Add a job:\n                                    <input\n                                        defaultValue={newJobTitle}\n                                        onChange={(event) => setNewJobTitle(event.target.value)}\n                                        placeholder=\"New job title...\"\n                                        type=\"text\"\n                                    />\n                                    <input\n                                        defaultValue={newJobCompany}\n                                        onChange={(event) => setNewJobCompany(event.target.value)}\n                                        placeholder=\"Job's company name...\"\n                                        type=\"text\"\n                                    />\n                                    <input\n                                        defaultValue={newJobSalary}\n                                        onChange={(event) => setNewJobSalary(event.target.value)}\n                                        placeholder=\"Job's Salary...\"\n                                        type=\"text\"\n                                    />\n                                    <input\n                                        defaultValue={newJobDate}\n                                        onChange={(event) => setNewJobDate(event.target.value)}\n                                        placeholder=\"Posted on...\"\n                                        type=\"text\"\n                                    />\n                                    <button\n                                        onClick={() =>\n                                            dispatch({\n                                                type: ADD_JOB,\n                                                payload: {\n                                                    title: newJobTitle,\n                                                    company: newJobCompany,\n                                                    salary: newJobSalary,\n                                                    postedOn: newJobDate,\n                                                },\n                                            })\n                                        }\n                                    >\n                                        Add Car\n                                    </button>\n                                </div>\n                            </div>\n                        </section>\n                        <section className=\"car-list\">\n                            {console.log(state)}\n                            {state.cars.map((job) => (\n                                <div key={job.id} id={job.id} className=\"\">\n                                    <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n                                        {job.title} <br />\n                                        <span style={{ fontSize: '1rem' }}>\n                                            {job.company}\n                                        </span>\n                                    </h4>\n                                    <div className=\"card-body bg-light p-2\">\n                                        <p>${job.salary}/y</p>\n                                        <code>\n                                            Job ID:\n                                            {job.id}\n                                        </code>\n                                    </div>\n                                    <div className=\"card-body bg-light p-2\">\n                                        <p>{job.postedOn}</p>\n                                        <code>\n                                            Job ID:\n                                            {job.id}\n                                        </code>\n                                    </div>\n                                    {/* <span style={{ fontSize: '1rem' }}>\n                                        {car.isRunning ? 'Car is running 🏎️' : 'Car is off 💤'}\n                                        <button\n                                            id=\"turnOn\"\n                                            onClick={\n                                                !car.isRunning\n                                                    ? () => dispatch({ type: START_CAR, payload: car.id })\n                                                    : () => dispatch({ type: STOP_CAR, payload: car.id })\n                                            }\n                                        >\n                                            Toggle Engine\n                                        </button>\n                                    </span> */}\n                                </div>\n                            ))}\n                        </section>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default JobList;"]},"metadata":{},"sourceType":"module"}